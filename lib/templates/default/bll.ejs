using System;
using System.Collections.Generic;
using System.Linq;
using PetaPoco;

namespace <%=dbConfig.namespace%>.<%=dbConfig.bllNamespace%>
{
    public partial class <%=table.className%>
    {
        private <%=dbConfig.dalNamespace%>.<%=table.className%> dal =  new  <%=dbConfig.dalNamespace%>.<%=table.className%>();

        /*
        public void UsingTransaction()
        {
            using(var scope = dal.GetTransaction())
            {
                //TODO.....dal.method1();dal.method2();
                scope.Complete();
            }

        }
        */

        public Model.<%=table.className%> Add(Model.<%=table.className%> m<%=table.className%>)
        {
            return dal.Add(m<%=table.className%>);
        }

        public Model.<%=table.className%> Update(Model.<%=table.className%> m<%=table.className%>)
        {
            return dal.Update(m<%=table.className%>);
        }
        <%if(table.pks.length>0){%>
        public Model.<%=table.className%> Get<%=table.className%>(<%for(var i=0;i<table.pks.length;i++){%><%=(i==0?"":",")%><%=table.pks[i].propertyType%> <%=table.pks[i].propertyName.toFirstLower()%><%}%>)
        {
            return Get<%=table.className%>(<%for(var i=0;i<table.pks.length;i++){%><%=(i==0?"":",")%><%=table.pks[i].propertyName.toFirstLower()%><%}%>)
        }
        <%}%>
        <%if(table.pks.length>0){%>
        public bool Delete(<%for(var i=0;i<table.pks.length;i++){%><%=(i==0?"":",")%><%=table.pks[i].propertyType%> <%=table.pks[i].propertyName.toFirstLower()%><%}%>)
        {
            return dal.Delete(<%for(var i=0;i<table.pks.length;i++){%><%=(i==0?"":",")%><%=table.pks[i].propertyName.toFirstLower()%><%}%>);
        }
        <%}%>

        public List<Model.<%=table.className%>> GetList(int count)
        {
            return dal.GetList(count);
        }

        public Page<Model.<%=table.className%>> GetPageList(int pageIndex,int pageSize)
        {
            return dal.GetPageList(pageIndex,pageSize);
        }
        /*
        public Page<Model.<%=table.className%>> GetPageList(Model.Query<%=table.className%> query)
        {
            return dal.GetPageList(query);
        }
        */

    }

}